const { chromium } = require('playwright');

// üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –õ–û–ì–ò–ù–ê –ò –¢–û–ö–ï–ù–û–í
async function diagnoseLoginAndTokens() {
  const browser = await chromium.launch({ 
    headless: true,
    args: ['--no-sandbox', '--disable-setuid-sandbox', '--disable-dev-shm-usage']
  });
  
  const context = await browser.newContext({
    viewport: { width: 1920, height: 1080 },
    userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
  });
  
  const page = await context.newPage();
  
  try {
    console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞...');
    
    await page.goto('https://mebelplace.com.kz/login', { waitUntil: 'networkidle' });
    await page.waitForTimeout(2000);
    
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –ª–æ–≥–∏–Ω–∞
    console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –ª–æ–≥–∏–Ω–∞...');
    await page.locator('input[placeholder="+7XXXXXXXXXX"]').fill('+77771234567');
    await page.waitForTimeout(500);
    
    await page.locator('input[type="password"]').fill('testpass123');
    await page.waitForTimeout(500);
    
    console.log('‚úÖ –§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞');
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    const requests = [];
    const responses = [];
    
    page.on('request', request => {
      if (request.url().includes('/api/auth/login')) {
        requests.push({
          url: request.url(),
          method: request.method(),
          headers: request.headers(),
          postData: request.postData()
        });
      }
    });
    
    page.on('response', response => {
      if (response.url().includes('/api/auth/login')) {
        responses.push({
          url: response.url(),
          status: response.status(),
          headers: response.headers()
        });
      }
    });
    
    // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –ª–æ–≥–∏–Ω–∞
    console.log('üîê –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏"...');
    await page.locator('button:has-text("–í–æ–π—Ç–∏")').click();
    
    // –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞
    await page.waitForTimeout(5000);
    
    console.log('üì° –°–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã:');
    requests.forEach((req, i) => {
      console.log(`   Request ${i + 1}: ${req.method} ${req.url}`);
      console.log(`   Headers:`, req.headers);
      console.log(`   Data:`, req.postData);
    });
    
    console.log('üì° –°–µ—Ç–µ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã:');
    responses.forEach((res, i) => {
      console.log(`   Response ${i + 1}: ${res.status} ${res.url}`);
      console.log(`   Headers:`, res.headers);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
    console.log('üíæ –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage...');
    const localStorage = await page.evaluate(() => {
      const items = {};
      for (let i = 0; i < window.localStorage.length; i++) {
        const key = window.localStorage.key(i);
        if (key) {
          items[key] = window.localStorage.getItem(key);
        }
      }
      return items;
    });
    
    console.log('üì¶ localStorage —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:');
    Object.keys(localStorage).forEach(key => {
      const value = localStorage[key];
      console.log(`   ${key}: ${value ? value.substring(0, 50) + '...' : 'null'}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º cookies
    console.log('üç™ –ü—Ä–æ–≤–µ—Ä—è–µ–º cookies...');
    const cookies = await context.cookies();
    console.log('üì¶ Cookies:');
    cookies.forEach(cookie => {
      console.log(`   ${cookie.name}: ${cookie.value.substring(0, 50)}...`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π URL
    const currentUrl = page.url();
    console.log(`üåê –¢–µ–∫—É—â–∏–π URL: ${currentUrl}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const title = await page.title();
    console.log(`üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${title}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userElements = await page.locator('[data-testid*="user"], .user-menu, .profile').count();
    console.log(`üë§ –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–π–¥–µ–Ω–æ: ${userElements}`);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω, —Ç–µ—Å—Ç–∏—Ä—É–µ–º API
    if (localStorage.accessToken) {
      console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º...');
      
      const apiResponse = await page.evaluate(async (token) => {
        try {
          const res = await fetch('https://mebelplace.com.kz/api/support/contact', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify({
              subject: '–¢–µ—Å—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞',
              message: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.',
              priority: 'medium'
            })
          });
          
          const data = await res.json();
          return {
            status: res.status,
            success: res.ok,
            data: data
          };
        } catch (error) {
          return {
            status: 0,
            success: false,
            error: error.message
          };
        }
      }, localStorage.accessToken);
      
      console.log('üì° API –æ—Ç–≤–µ—Ç:', apiResponse);
    }
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
  } finally {
    await browser.close();
  }
}

diagnoseLoginAndTokens().catch(console.error);
