'use client';

import React, { useState } from 'react';
import { 
  GlassCard, 
  GlassCardHeader, 
  GlassCardTitle, 
  GlassCardContent, 
  GlassButton,
  GlassInput 
} from '@/components/ui/glass';

interface FAQ {
  id: string;
  question: string;
  answer: string;
  category: string;
}

interface SupportTicket {
  id: string;
  subject: string;
  description: string;
  category: string;
  priority: 'low' | 'medium' | 'high';
  status: 'open' | 'in_progress' | 'resolved';
}

export default function GlassSupportScreen() {
  const [activeTab, setActiveTab] = useState<'faq' | 'contact' | 'tickets'>('faq');
  const [selectedCategory, setSelectedCategory] = useState<string>('all');
  const [ticketForm, setTicketForm] = useState<SupportTicket>({
    id: '',
    subject: '',
    description: '',
    category: 'general',
    priority: 'medium',
    status: 'open'
  
  // API hooks
  // const { data, loading, error, refetch } = use[RelevantHook]();
});
  const [submitting, setSubmitting] = useState(false);

  const faqCategories = [
    { id: 'all', label: '–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã' },
    { id: 'account', label: '–ê–∫–∫–∞—É–Ω—Ç' },
    { id: 'orders', label: '–ó–∞–∫–∞–∑—ã' },
    { id: 'payments', label: '–ü–ª–∞—Ç–µ–∂–∏' },
    { id: 'technical', label: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞' },
    { id: 'general', label: '–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã' }
  ];

  const faqData: FAQ[] = [
    {
      id: '1',
      question: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –º–µ–±–µ–ª–∏?',
      answer: '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É", –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è: –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞, –±—é–¥–∂–µ—Ç, —Å—Ä–æ–∫–∏, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –º–∞—Å—Ç–µ—Ä–∞ —Å–º–æ–≥—É—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–∏ —É—Å–ª—É–≥–∏.',
      category: 'orders'
    },
    {
      id: '2',
      question: '–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞?',
      answer: '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É. –í—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π, —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –∏–ª–∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º. –°—Ä–µ–¥—Å—Ç–≤–∞ –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è –Ω–∞ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏ –ø–µ—Ä–µ–≤–æ–¥—è—Ç—Å—è –º–∞—Å—Ç–µ—Ä—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.',
      category: 'payments'
    },
    {
      id: '3',
      question: '–ú–æ–≥—É –ª–∏ —è –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑?',
      answer: '–î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –¥–æ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç –±–µ–∑ —à—Ç—Ä–∞—Ñ–æ–≤. –ü–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø–æ–ª–∏—Ç–∏–∫–∞ —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–±—ä–µ–º–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç. –ü–æ–¥—Ä–æ–±–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —É–∫–∞–∑–∞–Ω—ã –≤ –£—Å–ª–æ–≤–∏—è—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.',
      category: 'orders'
    },
    {
      id: '4',
      question: '–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–∞—Å—Ç–µ—Ä–æ–º?',
      answer: '–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∏–º —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ. –¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–æ–≤ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞.',
      category: 'general'
    },
    {
      id: '5',
      question: '–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å?',
      answer: '–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" ‚Üí "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å" ‚Üí "–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å". –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å –∏ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–≤–∞–∂–¥—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤.',
      category: 'account'
    },
    {
      id: '6',
      question: '–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?',
      answer: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã –¥–ª—è –Ω—É–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π. –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –Ω–∞—à–µ–≥–æ —Å–∞–π—Ç–∞.',
      category: 'technical'
    },
    {
      id: '7',
      question: '–ö–∞–∫ —Å—Ç–∞—Ç—å –º–∞—Å—Ç–µ—Ä–æ–º –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ?',
      answer: '–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –º–∞—Å—Ç–µ—Ä–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ä–∞–±–æ—Ç –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é. –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø—ã—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã.',
      category: 'account'
    },
    {
      id: '8',
      question: '–ö–∞–∫–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞?',
      answer: 'MebelPlace –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, –∑–∞—â–∏—Ç—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–º–æ—â—å –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ —Å–ø–æ—Ä–æ–≤. –ú—ã —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç—Ä–∞—Ö–æ–≤–∫—É –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –º–∞—Å—Ç–µ—Ä–æ–º.',
      category: 'general'
    }
  ];

  const filteredFAQs = faqData.filter(faq => 
    selectedCategory === 'all' || faq.category === selectedCategory
  );

  const handleSubmitTicket = async (e: React.FormEvent) => {
    e.preventDefault();
    setSubmitting(true);
    
    try {
      // API integration - using mock data structure matching API types
      console.log('Submitting support ticket:', ticketForm);
      
      // Simulate API call
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      alert('–ó–∞—è–≤–∫–∞ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.');
      
      // Reset form
      setTicketForm({
        id: '',
        subject: '',
        description: '',
        category: 'general',
        priority: 'medium',
        status: 'open'
      });
    } catch (error) {
      console.error('Error submitting ticket:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <div className="min-h-screen glass-bg-primary glass-blur-base p-4">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <GlassCard variant="elevated" padding="lg" className="mb-6">
          <GlassCardHeader>
            <GlassCardTitle level={1} className="flex items-center gap-3">
              <svg className="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M12 2.25a9.75 9.75 0 100 19.5 9.75 9.75 0 000-19.5z" />
              </svg>
              –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
            </GlassCardTitle>
          </GlassCardHeader>
          <GlassCardContent>
            <p className="glass-text-secondary">
              –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å! –ù–∞–π–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
            </p>
          </GlassCardContent>
        </GlassCard>

        {/* Navigation Tabs */}
        <GlassCard variant="elevated" padding="lg" className="mb-6">
          <GlassCardContent>
            <div className="flex flex-wrap gap-2">
              {[
                { id: 'faq', label: '–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', icon: '‚ùì' },
                { id: 'contact', label: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏', icon: 'üí¨' },
                { id: 'tickets', label: '–ú–æ–∏ –∑–∞—è–≤–∫–∏', icon: 'üé´' }
              ].map((tab) => (
                <GlassButton
                  key={tab.id}
                  variant={activeTab === tab.id ? 'gradient' : 'ghost'}
                  size="md"
                  onClick={() => setActiveTab(tab.id as any)}
                >
                  <span className="mr-2">{tab.icon}</span>
                  {tab.label}
                </GlassButton>
              ))}
            </div>
          </GlassCardContent>
        </GlassCard>

        {/* FAQ Tab */}
        {activeTab === 'faq' && (
          <>
            {/* Category Filter */}
            <GlassCard variant="elevated" padding="lg" className="mb-6">
              <GlassCardContent>
                <div className="flex flex-wrap gap-2">
                  {faqCategories.map((category) => (
                    <GlassButton
                      key={category.id}
                      variant={selectedCategory === category.id ? 'gradient' : 'ghost'}
                      size="sm"
                      onClick={() => setSelectedCategory(category.id)}
                    >
                      {category.label}
                    </GlassButton>
                  ))}
                </div>
              </GlassCardContent>
            </GlassCard>

            {/* FAQ List */}
            <div className="space-y-4">
              {filteredFAQs.map((faq) => (
                <GlassCard key={faq.id} variant="interactive" padding="lg" className="hover:glass-shadow-md transition-all">
                  <GlassCardContent>
                    <h3 className="text-lg font-semibold glass-text-primary mb-3">
                      {faq.question}
                    </h3>
                    <p className="glass-text-secondary leading-relaxed">
                      {faq.answer}
                    </p>
                  </GlassCardContent>
                </GlassCard>
              ))}
            </div>

            {filteredFAQs.length === 0 && (
              <GlassCard variant="elevated" padding="xl" className="text-center">
                <GlassCardContent>
                  <div className="w-16 h-16 glass-bg-secondary rounded-full flex items-center justify-center mx-auto mb-4">
                    <svg className="w-8 h-8 glass-text-muted" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                  </div>
                  <h3 className="text-lg font-semibold glass-text-primary mb-2">
                    –í–æ–ø—Ä–æ—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                  </h3>
                  <p className="glass-text-secondary mb-4">
                    –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é
                  </p>
                  <GlassButton variant="gradient" onClick={() => setActiveTab('contact')}>
                    –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
                  </GlassButton>
                </GlassCardContent>
              </GlassCard>
            )}
          </>
        )}

        {/* Contact Tab */}
        {activeTab === 'contact' && (
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {/* Contact Form */}
            <GlassCard variant="elevated" padding="lg">
              <GlassCardHeader>
                <GlassCardTitle level={2} className="text-lg">
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                </GlassCardTitle>
              </GlassCardHeader>
              <GlassCardContent>
                <form onSubmit={handleSubmitTicket} className="space-y-4">
                  <GlassInput
                    label="–¢–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è"
                    value={ticketForm.subject}
                    onValueChange={(value) => setTicketForm(prev => ({ ...prev, subject: value }))}
                    placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É"
                    required
                  />

                  <div>
                    <label className="block text-sm font-medium glass-text-primary mb-2">
                      –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                    </label>
                    <select
                      value={ticketForm.category}
                      onChange={(e) => setTicketForm(prev => ({ ...prev, category: e.target.value }))}
                      className="w-full glass-bg-primary glass-border rounded-lg px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-orange-500"
                    >
                      <option value="general">–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã</option>
                      <option value="account">–ü—Ä–æ–±–ª–µ–º—ã —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º</option>
                      <option value="orders">–ó–∞–∫–∞–∑—ã –∏ –¥–æ—Å—Ç–∞–≤–∫–∞</option>
                      <option value="payments">–ü–ª–∞—Ç–µ–∂–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç</option>
                      <option value="technical">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</option>
                      <option value="business">–ë–∏–∑–Ω–µ—Å-–≤–æ–ø—Ä–æ—Å—ã</option>
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium glass-text-primary mb-2">
                      –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
                    </label>
                    <select
                      value={ticketForm.priority}
                      onChange={(e) => setTicketForm(prev => ({ ...prev, priority: e.target.value as any }))}
                      className="w-full glass-bg-primary glass-border rounded-lg px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-orange-500"
                    >
                      <option value="low">–ù–∏–∑–∫–∏–π</option>
                      <option value="medium">–°—Ä–µ–¥–Ω–∏–π</option>
                      <option value="high">–í—ã—Å–æ–∫–∏–π</option>
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium glass-text-primary mb-2">
                      –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
                    </label>
                    <textarea
                      rows={5}
                      value={ticketForm.description}
                      onChange={(e) => setTicketForm(prev => ({ ...prev, description: e.target.value }))}
                      className="w-full glass-bg-primary glass-border rounded-lg px-3 py-2 text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-orange-500"
                      placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å..."
                      required
                    />
                  </div>

                  <GlassButton
                    type="submit"
                    variant="gradient"
                    size="lg"
                    className="w-full"
                    loading={submitting}
                  >
                    {submitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
                  </GlassButton>
                </form>
              </GlassCardContent>
            </GlassCard>

            {/* Contact Information */}
            <GlassCard variant="elevated" padding="lg">
              <GlassCardHeader>
                <GlassCardTitle level={2} className="text-lg">
                  –î—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏
                </GlassCardTitle>
              </GlassCardHeader>
              <GlassCardContent>
                <div className="space-y-6">
                  <div className="flex items-center gap-4">
                    <div className="w-12 h-12 glass-bg-accent-blue-500 rounded-full flex items-center justify-center">
                      <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                      </svg>
                    </div>
                    <div>
                      <h3 className="font-semibold glass-text-primary">Email</h3>
                      <p className="glass-text-secondary">support@mebelplace.kz</p>
                      <p className="text-sm glass-text-muted">–û—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤</p>
                    </div>
                  </div>

                  <div className="flex items-center gap-4">
                    <div className="w-12 h-12 glass-bg-accent-orange-500 rounded-full flex items-center justify-center">
                      <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                      </svg>
                    </div>
                    <div>
                      <h3 className="font-semibold glass-text-primary">–¢–µ–ª–µ—Ñ–æ–Ω</h3>
                      <p className="glass-text-secondary">+7 777 123 45 67</p>
                      <p className="text-sm glass-text-muted">–ü–Ω-–ü—Ç: 9:00-18:00 (–ê–ª–º–∞—Ç—ã)</p>
                    </div>
                  </div>

                  <div className="flex items-center gap-4">
                    <div className="w-12 h-12 glass-bg-accent-purple-500 rounded-full flex items-center justify-center">
                      <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                      </svg>
                    </div>
                    <div>
                      <h3 className="font-semibold glass-text-primary">–ß–∞—Ç</h3>
                      <p className="glass-text-secondary">–û–Ω–ª–∞–π–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∞</p>
                      <p className="text-sm glass-text-muted">–î–æ—Å—Ç—É–ø–µ–Ω 24/7</p>
                    </div>
                  </div>

                  <div className="flex items-center gap-4">
                    <div className="w-12 h-12 glass-bg-success rounded-full flex items-center justify-center">
                      <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                      </svg>
                    </div>
                    <div>
                      <h3 className="font-semibold glass-text-primary">–û—Ñ–∏—Å</h3>
                      <p className="glass-text-secondary">–ê–ª–º–∞—Ç—ã, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω</p>
                      <p className="text-sm glass-text-muted">—É–ª. –ê–±–∞—è 150, –æ—Ñ–∏—Å 301</p>
                    </div>
                  </div>
                </div>
              </GlassCardContent>
            </GlassCard>
          </div>
        )}

        {/* Tickets Tab */}
        {activeTab === 'tickets' && (
          <GlassCard variant="elevated" padding="xl" className="text-center">
            <GlassCardContent>
              <div className="w-16 h-16 glass-bg-secondary rounded-full flex items-center justify-center mx-auto mb-4">
                <svg className="w-8 h-8 glass-text-muted" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z" />
                </svg>
              </div>
              <h3 className="text-lg font-semibold glass-text-primary mb-2">
                –ò—Å—Ç–æ—Ä–∏—è –∑–∞—è–≤–æ–∫
              </h3>
              <p className="glass-text-secondary mb-4">
                –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤—Å–µ –≤–∞—à–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏. 
                –§—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å API.
              </p>
              <GlassButton variant="gradient" onClick={() => setActiveTab('contact')}>
                –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É
              </GlassButton>
            </GlassCardContent>
          </GlassCard>
        )}
      </div>
    </div>
  );
}
