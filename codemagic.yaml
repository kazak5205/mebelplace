# Codemagic configuration for MebelPlace iOS App Store build and Android APK
# This file configures automatic building and uploading to App Store Connect

workflows:
  mebelplace-android:
    name: MebelPlace Android APK
    max_build_duration: 60
    instance_type: linux_x2
    environment:
      groups:
        - Grand
      vars:
        FLUTTER_VERSION: stable
      
    scripts:
      - name: Set up Flutter
        script: |
          flutter sdk install $FLUTTER_VERSION
          
      - name: Get Flutter packages
        script: |
          cd mebelplace_demo
          flutter packages pub get
          
      - name: Flutter analyze
        script: |
          cd mebelplace_demo
          flutter analyze --no-fatal-infos
          
      - name: Build APK
        script: |
          cd mebelplace_demo
          flutter build apk --release \
            --build-name=1.0.0 \
            --build-number=1
            
    artifacts:
      - mebelplace_demo/build/app/outputs/flutter-apk/*.apk
      
    publishing:
      email:
        recipients:
          - bekaron.company@gmail.com
        notify:
          success: true
          failure: true
  
  mebelplace-ios:
    name: MebelPlace iOS App Store
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      groups:
        - Grand
      vars:
        FLUTTER_VERSION: stable
        BUNDLE_ID: "com.mebelplace.mebelplaceDemo"
        APP_STORE_CONNECT_ISSUER_ID: "94ce68e4-bd5a-4bf4-b266-46f0b9bd0596"
        APP_STORE_CONNECT_KEY_IDENTIFIER: "7R2G5C786A"
      xcode: latest
      cocoapods: default
      
    integrations:
      app_store_connect: mebelplace-integration
      
    scripts:
      - name: Set up code signing
        script: |
          echo "========================================="
          echo "üîß Setting up iOS Code Signing"
          echo "========================================="
          
          # Initialize keychain
          keychain initialize
          KEYCHAIN_PATH=$(security default-keychain | tr -d '" ' | xargs)
          
          cd $CM_BUILD_DIR/mebelplace_demo/ios
          
          # Import the p12 file with certificate and private key
          echo "Importing certificate and private key from p12..."
          security import distribution.p12 \
            -k "$KEYCHAIN_PATH" \
            -P temp123456 \
            -A
          
          # Unlock keychain and allow codesign access
          security unlock-keychain -p "" "$KEYCHAIN_PATH"
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" "$KEYCHAIN_PATH"
          
          # Install provisioning profile with correct UUID
          echo "Installing provisioning profile..."
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          
          # Extract UUID from provisioning profile and copy with UUID as filename
          UUID=$(/usr/libexec/PlistBuddy -c "Print :UUID" /dev/stdin <<< $(/usr/bin/security cms -D -i MebelPlace_AppStore.mobileprovision))
          echo "Profile UUID: $UUID"
          cp MebelPlace_AppStore.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/"$UUID.mobileprovision"
          
          # Verify
          echo "========================================="
          echo "Available signing identities:"
          security find-identity -v -p codesigning "$KEYCHAIN_PATH"
          echo "========================================="
          echo "Installed provisioning profiles:"
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
          echo "========================================="
          echo "‚úÖ Code signing setup complete!"
            
          
      - name: Set up Flutter
        script: |
          flutter sdk install $FLUTTER_VERSION
          flutter config --enable-web
          
      - name: Get Flutter packages
        script: |
          cd mebelplace_demo
          flutter packages pub get
          
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
          
      - name: Flutter analyze
        script: |
          cd mebelplace_demo
          flutter analyze --no-fatal-infos
          
      - name: Flutter unit tests
        script: |
          cd mebelplace_demo
          echo "Skipping tests for App Store build"
          
      - name: Build ipa for distribution
        script: |
          cd mebelplace_demo
          
          echo "========================================="
          echo "üèóÔ∏è Building IPA"
          echo "========================================="
          
          # First, try standard flutter build ipa
          flutter build ipa --release \
            --build-name=1.0.0 \
            --build-number=1 \
            --export-options-plist=$CM_BUILD_DIR/mebelplace_demo/export_options.plist \
            --verbose
          
          BUILD_EXIT_CODE=$?
          
          echo "========================================="
          echo "Build exit code: $BUILD_EXIT_CODE"
          echo "========================================="
          
          # Check if IPA was created
          IPA_FILE=$(find build/ios/ipa -name "*.ipa" 2>/dev/null | head -n 1)
          
          if [ -n "$IPA_FILE" ]; then
            echo "‚úÖ IPA created successfully: $IPA_FILE"
            ls -lh "$IPA_FILE"
          else
            echo "‚ö†Ô∏è IPA not found in build/ios/ipa, trying manual export..."
            
            # Find the xcarchive
            XCARCHIVE=$(find build/ios -name "*.xcarchive" -type d | head -n 1)
            
            if [ -z "$XCARCHIVE" ]; then
              echo "‚ùå No xcarchive found!"
              exit 1
            fi
            
            echo "Found archive: $XCARCHIVE"
            
            # Manual export using xcodebuild
            mkdir -p build/ios/ipa
            
            xcodebuild -exportArchive \
              -archivePath "$XCARCHIVE" \
              -exportOptionsPlist $CM_BUILD_DIR/mebelplace_demo/export_options.plist \
              -exportPath build/ios/ipa \
              -allowProvisioningUpdates
            
            if [ $? -eq 0 ]; then
              echo "‚úÖ Manual IPA export successful"
              ls -la build/ios/ipa/
            else
              echo "‚ùå Manual export failed!"
              exit 1
            fi
          fi
          
          echo "========================================="
          echo "Final build output:"
          ls -la build/ios/ || true
          ls -la build/ios/ipa/ || true
          find build/ios/ipa -name "*.ipa" -type f || true
          echo "========================================="
            
      - name: Find IPA file
        script: |
          echo "========================================="
          echo "üîç Searching for IPA file"
          echo "========================================="
          cd $CM_BUILD_DIR/mebelplace_demo
          find . -name "*.ipa" -type f
          echo "========================================="
          
      - name: Upload to App Store Connect
        script: |
          cd $CM_BUILD_DIR/mebelplace_demo
          IPA_PATH=$(find . -name "*.ipa" -type f | head -n 1)
          echo "Found IPA: $IPA_PATH"
          
          if [ -z "$IPA_PATH" ]; then
            echo "‚ùå No IPA file found!"
            exit 1
          fi
          
          app-store-connect publish \
            --path "$IPA_PATH" \
            --testflight
            
    artifacts:
      - mebelplace_demo/build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
      
    publishing:
      app_store_connect:
        auth: integration
        
        submit_to_testflight: true
        beta_groups:
          - "MebelPlace Beta Testers"
          
        submit_to_app_store: false # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ true –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ App Store
