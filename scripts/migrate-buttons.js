#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ Button –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–∞ UnifiedButton
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
 */

const fs = require('fs');
const path = require('path');

// –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
const FILE_PATTERNS = [
  'apps/frontend-nextjs/src/**/*.{ts,tsx}',
  'apps/frontend-nextjs/src/**/*.{js,jsx}',
];

// –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ä—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–∞ –Ω–æ–≤—ã–µ
const IMPORT_MAPPINGS = {
  // –°—Ç–∞—Ä—ã–µ –∏–º–ø–æ—Ä—Ç—ã -> –Ω–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã
  "import { Button } from '@/components/ui/Button'": "import { Button } from '@/components/ui'",
  "import { Button } from '@/components/ui'": "import { Button } from '@/components/ui'", // —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
  "import { GlassButton } from '@/components/ui/GlassButton'": "import { GlassButton } from '@/components/ui'",
  "import { PremiumButton } from '@/components/ui/PremiumButton'": "import { PremiumButton } from '@/components/ui'",
  "import { A11yButton } from '@/components/ui/A11yButton'": "import { A11yButton } from '@/components/ui'",
  "import { IconButton } from '@/components/ui/IconButton'": "import { IconButton } from '@/components/ui'",
  
  // –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
  "from './Button'": "from '@/components/ui'",
  "from './GlassButton'": "from '@/components/ui'",
  "from './PremiumButton'": "from '@/components/ui'",
  "from './A11yButton'": "from '@/components/ui'",
  "from './IconButton'": "from '@/components/ui'",
  
  // –ò–º–ø–æ—Ä—Ç—ã —Ç–∏–ø–æ–≤
  "import type { ButtonProps } from '@/components/ui/Button'": "import type { ButtonProps } from '@/components/ui'",
  "import type { ButtonProps } from '@/components/ui'": "import type { ButtonProps } from '@/components/ui'", // —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –∑–∞–º–µ–Ω—ã
const COMPONENT_MAPPINGS = {
  // –°—Ç–∞—Ä—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã -> –Ω–æ–≤—ã–µ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–∫—É)
  '<Button ': '<Button ',
  '<GlassButton ': '<GlassButton ',
  '<PremiumButton ': '<PremiumButton ',
  '<A11yButton ': '<A11yButton ',
  '<IconButton ': '<IconButton ',
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
function updateFile(filePath) {
  try {
    let content = fs.readFileSync(filePath, 'utf8');
    let hasChanges = false;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    for (const [oldImport, newImport] of Object.entries(IMPORT_MAPPINGS)) {
      if (content.includes(oldImport)) {
        content = content.replace(new RegExp(oldImport.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g'), newImport);
        hasChanges = true;
        console.log(`  ‚úÖ Updated import: ${oldImport} -> ${newImport}`);
      }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    for (const [oldComponent, newComponent] of Object.entries(COMPONENT_MAPPINGS)) {
      if (content.includes(oldComponent)) {
        content = content.replace(new RegExp(oldComponent.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g'), newComponent);
        hasChanges = true;
        console.log(`  ‚úÖ Updated component: ${oldComponent} -> ${newComponent}`);
      }
    }
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    if (hasChanges) {
      fs.writeFileSync(filePath, content, 'utf8');
      return true;
    }
    
    return false;
  } catch (error) {
    console.error(`‚ùå Error updating ${filePath}:`, error.message);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤
function findFiles(dir, extensions = ['.ts', '.tsx', '.js', '.jsx']) {
  const files = [];
  
  try {
    const items = fs.readdirSync(dir);
    
    for (const item of items) {
      const fullPath = path.join(dir, item);
      const stat = fs.statSync(fullPath);
      
      if (stat.isDirectory() && !item.startsWith('.') && item !== 'node_modules') {
        files.push(...findFiles(fullPath, extensions));
      } else if (stat.isFile() && extensions.some(ext => item.endsWith(ext))) {
        files.push(fullPath);
      }
    }
  } catch (error) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç—É–ø–∞
  }
  
  return files;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üîÑ Migrating Button components to UnifiedButton...');
  
  const frontendDir = path.join(process.cwd(), 'apps/frontend-nextjs/src');
  const files = findFiles(frontendDir);
  console.log(`üìÅ Found ${files.length} files to check`);
  
  let updatedFiles = 0;
  let totalChanges = 0;
  
  for (const file of files) {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∞–º UnifiedButton —Ñ–∞–π–ª
    if (file.includes('UnifiedButton')) {
      continue;
    }
    
    console.log(`\nüìÑ Checking: ${file}`);
    
    if (updateFile(file)) {
      updatedFiles++;
      totalChanges++;
    }
  }
  
  console.log('\nüìä Migration Summary:');
  console.log(`  üìÅ Files checked: ${files.length}`);
  console.log(`  ‚úÖ Files updated: ${updatedFiles}`);
  console.log(`  üîÑ Total changes: ${totalChanges}`);
  
  if (updatedFiles > 0) {
    console.log('\nüéâ Migration completed successfully!');
    console.log('\nüìù Next steps:');
    console.log('  1. Run tests to ensure everything works');
    console.log('  2. Remove old Button component files if no longer needed');
    console.log('  3. Update documentation');
  } else {
    console.log('\n‚úÖ No files needed updates - all imports are already correct!');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
if (require.main === module) {
  main();
}

module.exports = { updateFile, findFiles };
